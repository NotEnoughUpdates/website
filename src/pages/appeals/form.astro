---
export const prerender = false;

import Layout from "../../layouts/Layout.astro";
import { validateForm } from "../../utils";
import { Result } from "@sapphire/result";

let type: string | null = null;
let error: string | null = null;
let discordState: string | null = null;

if (Astro.request.method === "POST") {
	const decodingResult = await Result.fromAsync<void, string>(async () => {
		const formData = await Result.fromAsync(async () => Object.fromEntries(await Astro.request.formData()));
		if (formData.isErr()) throw "Unable to decode POST formdata";
		const decodedData = formData.unwrap();

		if (typeof decodedData.punishmentType === "string") type = decodedData.punishmentType;
		// Validate data
		const validated = validateForm(decodedData).mapErr(zodError => {
			const formatted = zodError.flatten();
			return `Validation error(s):${formatted.formErrors.map(formError => `\n- ${formError}`)}${Object.entries(formatted.fieldErrors).map(([key, fieldErrors]) => fieldErrors.map(fieldError => `\n- Error in ${key}: ${fieldError}`))}`;
		});
		if (validated.isErr()) throw validated.unwrapErr();
		// Redirect to discord if no error
		discordState = btoa(JSON.stringify(decodedData));
	});
	error = decodingResult.isErr() ? decodingResult.unwrapErr() : null;
	console.log(error);
} else {
	type = Astro.url.searchParams.get("type");
}
---

{
	type !== null && !["ban", "mute", "channelBlock", "role"].includes(type) ? (
		<meta http-equiv="refresh" content={`0; url=/`} />
	) : null
}
{
	discordState !== null ? (
		<meta
			http-equiv="refresh"
			content={`0; url=https://discord.com/oauth2/authorize?client_id=${import.meta.env.CLIENT_ID}&response_type=code&redirect_uri=${import.meta.env.REDIRECT_SCHEME}%3A%2F%2F${encodeURIComponent(import.meta.env.REDIRECT_HOST)}%2Fappeals%2Foauth2-callback&scope=identify&state=${discordState}`}
		/>
	) : null
}

<Layout title="Moulberry's bush">
	<main>
		<h1>Appeal form</h1>
		{
			error !== null ? (
				<div class="error" set:html={"Error while submitting form:<br>" + error.replaceAll("\n", "<br>")} />
			) : null
		}
		<form method="POST" enctype="application/x-www-form-urlencoded">
			<label>
				What type of punishment are you appealing?
				<br />
				<select name="punishmentType" required>
					<option value="ban" {...type === "ban" ? { selected: true } : { disabled: true }}>Ban</option>
					<option value="mute" {...type === "mute" ? { selected: true } : { disabled: true }}>Mute</option>
					<option value="channelBlock" {...type === "channelBlock" ? { selected: true } : { disabled: true }}
						>Channel Block</option
					>
					<option value="role" {...type === "role" ? { selected: true } : { disabled: true }}>Punishment Role</option>
				</select>
			</label><br />

			{
				type === "channelBlock" ? (
					<>
						<label>
							What channel were you blocked from?
							<br />
							#<input name="blockedChannel" type="text" placeholder="neu-suggestions" required />
						</label>
						<br />
					</>
				) : null
			}

			{
				type === "role" ? (
					<>
						<label>
							What role were you given?
							<br />@
							<select name="role" required>
								<option disabled selected>
									Please select
								</option>
								<option value="Limited Server Access">Limited Server Access</option>
								<option value="No Files">No Files</option>
								<option value="No Reactions">No Reactions</option>
								<option value="No Links">No Links</option>
								<option value="No Giveaways">No Giveaways</option>
								<option value="No Bots">No Bots</option>
								<option value="No Threads">No Threads</option>
							</select>
						</label>
						<br />
					</>
				) : null
			}

			<label>
				Why were you {
					type === "ban"
						? "banned"
						: type === "mute"
							? "muted"
							: type === "channelBlock"
								? "blocked from this channel"
								: "given this role"
				}?
				<br />
				<textarea name="punishmentReason" required></textarea>
			</label><br />

			<label>
				Do you believe this punishment was fair?
				<br />
				<textarea name="fairness" required></textarea>
			</label><br />

			<label>
				Why should we reverse your {
					type === "ban"
						? "ban"
						: type === "mute"
							? "mute"
							: type === "channelBlock"
								? "channel block"
								: "punishment role"
				}?
				<br />
				<textarea name="reasoning" required></textarea>
			</label><br />

			<button>Submit</button>
		</form>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	textarea {
		width: 100%;
		height: 10em;
		font-family: system-ui, sans-serif;
	}
	button {
		width: 10em;
	}
</style>
