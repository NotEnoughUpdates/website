---
import type { ActionError } from "astro:actions";
import Layout from "../../layouts/Layout.astro";
import { validateForm } from "../../utils";

let error = null;

const code = Astro.url.searchParams.get("code");
const state = Astro.url.searchParams.get("state");
const responses = state !== null ? validateForm(JSON.parse(atob(state))) : null;
const questionsMap = {
	blockedChannel: "What channel were you blocked from?",
	punishmentReason: "Why were you given this punishment?",
	fairness: "Do you believe this punishment was fair?",
	reasoning: "Why should we reverse this punishment?"
};

if (code !== null && responses !== null) {
	// Exchange code for discord access token
	const accessTokenResponse = await fetch("https://discord.com/api/oauth2/token", {
		method: "POST",
		headers: {
			"Content-Type": "application/x-www-form-urlencoded"
		},
		body: new URLSearchParams({
			grant_type: "authorization_code",
			code,
			redirect_uri: `http://${import.meta.env.REDIRECT_HOST}/appeals/oauth2-callback`,
			client_id: import.meta.env.CLIENT_ID,
			client_secret: import.meta.env.CLIENT_SECRET
		}).toString()
	}).then(r => r.json());

	if ("error" in accessTokenResponse) {
		if (accessTokenResponse.error === "invalid_grant")
			error =
				"Your discord login was unable to be validated. This usually happens if the page is resubmitted by accident.";
		else error = `Unknown discord code grant error: "${JSON.stringify(accessTokenResponse)}"`;
	} else {
		const bearerToken = accessTokenResponse.access_token;
		const meResponse = await fetch("https://discord.com/api/oauth2/@me", {
			method: "GET",
			headers: {
				Authorization: `Bearer ${bearerToken}`
			}
		}).then(r => r.json());

		if (import.meta.env.BANNED_IDS.split(",").includes(meResponse.user.id)) {
			error = "Your discord account has been banned from making appeals";
		} else {
			// Submit the webhook
			await fetch(import.meta.env.WEBHOOK_URL, {
				method: "POST",
				headers: {
					"Content-Type": "application/json"
				},
				body: JSON.stringify({
					username: "New Punishment Appeal",
					embeds: [
						{
							title: "New Appeal Form Entry",
							type: "rich",
							color: 0x0080ff,
							fields: [
								{
									name: "What is your discord ID?",
									value: meResponse.user.id
								},
								{
									name: "What type of punishment are you appealing?",
									value:
										responses.punishmentType === "ban"
											? "Ban"
											: responses.punishmentType === "mute"
												? "Mute"
												: "Channel Block"
								},
								...(responses.punishmentType === "channelBlock"
									? [
											{
												name: questionsMap.blockedChannel,
												value: "#" + responses.blockedChannel
											}
										]
									: []),
								{
									name: questionsMap.punishmentReason,
									value: responses.punishmentReason
								},
								{
									name: questionsMap.fairness,
									value: responses.fairness
								},
								{
									name: questionsMap.reasoning,
									value: responses.reasoning
								}
							]
						}
					]
				})
			});
		}
	}
} else {
	error = "Invalid URL parameters";
}
---

<Layout title="Form Confirmation">
	<main>
		{
			error === null ? (
				<>
					<h1>Form Confirmation</h1>
					<p>
						Thanks for submitting the appeal form! We may not directly inform you when we decide, so check if the
						punishment has been reversed often.
					</p>
				</>
			) : (
				<>
					<h1>Form Error</h1>
					<p>
						Your form was unable to be submitted due to an error. If you believe this to be unintentional,
						please DM @t.y.y for assistance.
						<>
							<br />
							<br />
						</>
						Error:
						<br />
						{error}
					</p>
				</>
			)
		}
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
</style>
